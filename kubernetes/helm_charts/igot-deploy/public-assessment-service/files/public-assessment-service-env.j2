server.port={{ application_port }}
sb.api.key={{ bearer_token }}

cassandra.config.host={{ sunbird_cassandra_db_host }}
spring.data.cassandra.sb.startupTimeoutInSeconds=100000
spring.data.cassandra.sb.contact-points={{ sunbird_cassandra_db_host }}
sb.data.sync.path=/v1/data/sync
spring.data.cassandra.sb.port=9042
spring.data.cassandra.sb.keyspace-name={{ keyspace_sunbird }}
spring.data.cassandra.sb.username=
spring.data.cassandra.sb.password=

#Redis Cache Service properties
redis.host.name={{ kp_redis_ip }}
redis.port=6379
#redis timeout value is in seconds
redis.timeout=84600

redis.data.host.name={{ redis_host }}P
redis.data.port=6379

redis.questions.read.timeout=3600
read.assess.questions.from.redis=true
redis.wheebox.key=wheebox_usersMapping

#Assessment Feature values
assessment.host=http://assessment-service:9000/
assessment.hierarchy.read.path=questionset/v4/hierarchy/{identifier}?mode=edit
assessment.question.list.path=question/v4/list
assessment.read.assessmentLevel.params=name,identifier,primaryCategory,versionKey,mimeType,code,version,objectType,status,expectedDuration,totalQuestions,maxQuestions,description,assessmentType,sectionTimeBound
assessment.read.sectionLevel.params=parent,name,identifier,description,trackable,primaryCategory,versionKey,mimeType,code,version,objectType,status,index,maxQuestions,scoreCutoffType,minimumPassPercentage,additionalInstructions,sectionLevelDefinition,expectedDuration
assessment.read.questionLevel.params=parent,name,identifier,primaryCategory,body,versionKey,mimeType,code,objectType,status,qType,index,showSolutions,allowAnonymousAccess,visibility,version,showFeedback,license,questionLevel,expectedDuration,totalMarks
assessment.read.min.question.params=parent,name,identifier,primaryCategory,versionKey,mimeType,objectType,qType

assessment.hierarchy.namespace={{ env }}_hierarchy_store
assessment.hierarchy.table=questionset_hierarchy
assessment.ratake.count.verification.enabled=true
user.assessment.submission.duration=120

kafka.topics.user.assessment.async.submit.handler={{env}}.assessment.async.submit.handler
kafka.topics.user.assessment.async.submit.handler.group=assessmentAsyncSubmitHandlerGroup

encryption.key={{public_assessment_service_encryption_key}}

svgTemplate={{public_assessment_service_svgtemplate}}

content.hierarchy.namespace={{env}}_hierarchy_store
content.hierarchy.table=content_hierarchy

#Kafka Server
spring.kafka.bootstrap.servers={{ kafka_servers_list }}
kafka.topics.public.assessment.certificate={{env}}.assessment.public.certificate.request

assessment.primarykey.notallowed.certificate=Practice Question Set
public.user.assessment.data={{ public_assessment_service_assessment_data }}
assessment.user.submit.data.table={{ public_assessment_service_assessment_data }}

notify.service.host=http://notification-service:9000
notify.service.path.async=/v2/notification/send
notification.support.mail={{sunbird_notification_sender_email}}
public.assessment.certificate.template=publicAssessmentCertificateTempate
public-assessment-service-host=http://public-assessment-service:8090

kafka.topic.certificate.assessment.group=certificate.assessment.group
kafka.topic.certificate.request={{env}}.assessment.public.certificate.request

kakfa.offset.reset.value=latest
kafka.max.poll.interval.ms=15000
kafka.max.poll.records=100
kafka.auto.commit.interval.ms=10000

public.assessment.completion.template=publicAssessmentCompletionTemplate
spring.kafka.public.assessment.notification.topic.name={{env}}.public.assessment.cert.generation.email
public.assessment.cert.generation.post.process.topic={{env}}.public.assessment.cert.generation.post.process
kafka.topic.download.certificate={{env}}.public.assessment.cert.generation.email

public.access.url=https://{{portal_domain_name}}/assets/public/
storage.cloud.url={{cloud_storage_endpoint}}/{{sb_cb_ext_container}}/
