- name: ensure backup dir exists
  file: path="{{ postgresql_backup_dir }}" state=directory owner={{ postgresql_user }} group={{ postgresql_user }}

- set_fact:
    postgresql_backup_gzip_file_name: "postgresql_backup_{{ lookup('pipe', 'date +%Z-%Y-%m-%d-%H-%M-%S') }}.sql.gz"

- set_fact:
    postgresql_backup_gzip_file_path: "{{ postgresql_backup_dir }}/{{ postgresql_backup_gzip_file_name }}"

- name: Save backup
  command: bash -lc "pg_dumpall | gzip > {{ postgresql_backup_gzip_file_path }}"
  become_user: "{{ postgresql_user }}"
  async: 3600
  poll: 10

- name: upload to gcs
  include_role:
    name: artifacts-upload-gcp
  vars:
    artifacts_container: "{{ backup_bucket }}/{{ postgresql_backup_folder }}"
    artifact_path: "{{ postgresql_backup_gzip_file_path }}"
    artifact: "{{ postgresql_backup_gzip_file_name }}"
    service_account:  "{{ gcp_backups_service_account }}"

- name: clean up backup dir after upload
  file: path="{{ postgresql_backup_dir }}" state=absent
